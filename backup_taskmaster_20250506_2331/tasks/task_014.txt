# Task ID: 14
# Title: DNS & TLS Configuration for Bug Widget and API Endpoints
# Status: pending
# Dependencies: 11
# Priority: medium
# Description: Configure DNS records and TLS certificates for bug-widget.yourdomain.com (Vercel) and api-bug.yourdomain.com (Render/Fly/Cloud-Run) to ensure secure communication.
# Details:
This task involves setting up proper DNS configuration and TLS certificates for two domains:

1. For bug-widget.yourdomain.com (Vercel):
   - Create a CNAME record pointing to Vercel's servers (typically cname.vercel-dns.com)
   - Configure the domain in Vercel's dashboard
   - Let Vercel handle the automatic TLS certificate provisioning

2. For api-bug.yourdomain.com (Render/Fly/Cloud-Run):
   - Create appropriate DNS records based on the hosting provider:
     - For Render: CNAME to [your-service].render.com
     - For Fly.io: CNAME to [your-app].fly.dev
     - For Cloud Run: CNAME or ALIAS to ghs.googlehosted.com
   - Configure the domain in the respective platform's dashboard
   - Request and provision TLS certificates (some platforms handle this automatically)

3. Documentation:
   - Create a markdown document in the project repository detailing:
     - DNS provider used and access instructions
     - Record configurations (type, name, value, TTL)
     - Certificate renewal process and expiration dates
     - Troubleshooting steps for common issues

4. Ensure both endpoints enforce HTTPS and redirect HTTP requests appropriately.

# Test Strategy:
1. DNS Verification:
   - Use `dig` or `nslookup` to verify DNS records are correctly configured
   - Example: `dig bug-widget.yourdomain.com` should show the correct CNAME
   - Check propagation across multiple DNS servers

2. TLS Certificate Validation:
   - Access both endpoints via HTTPS in different browsers
   - Verify certificate validity using browser tools (padlock icon)
   - Use SSL checker tools (e.g., SSL Labs, https://www.ssllabs.com/ssltest/) to verify:
     - Certificate chain is valid
     - TLS version is current (TLS 1.2+)
     - Strong cipher suites are used

3. Security Headers:
   - Test with tools like SecurityHeaders.com to verify proper security headers
   - Ensure HSTS is enabled where appropriate

4. Redirect Testing:
   - Verify HTTP to HTTPS redirects work correctly
   - Test with curl: `curl -I http://bug-widget.yourdomain.com`

5. End-to-end Testing:
   - Verify API calls from the widget to the API endpoint work over HTTPS
   - Test from multiple network environments to ensure global accessibility
